method WDDOBEFOREACTION .
*  data lo_api_controller type ref to if_wd_view_controller.
*  data lo_action         type ref to if_wd_action.

*  lo_api_controller = wd_this->wd_get_api( ).
*  lo_action = lo_api_controller->get_current_action( ).

*  if lo_action is bound.
*    case lo_action->name.
*      when '...'.

*    endcase.
*  endif.
  DATA number TYPE i.
  DATA lo_nd_connection TYPE REF TO if_wd_context_node.

  DATA lo_el_connection TYPE REF TO if_wd_context_element.
  DATA ls_connection TYPE wd_this->Element_connection.

* navigate from <CONTEXT> to <CONNECTION> via lead selection
  lo_nd_connection = wd_context->get_child_node( name = wd_this->wdctx_connection ).

* @TODO handle non existant child
* IF lo_nd_connection IS INITIAL.
* ENDIF.

* get element via lead selection
  lo_el_connection = lo_nd_connection->get_element( ).
* @TODO handle not set lead selection
  IF lo_el_connection IS INITIAL.
  ENDIF.

* get all declared attributes
  lo_el_connection->get_static_attributes(
    IMPORTING
      static_attributes = ls_connection ).

  SELECT COUNT( * ) FROM SFLIGHT WHERE carrid = @ls_connection-carrid and
    connid = @ls_connection-connid INTO @number.

    IF number = 0.
*       get message manager
      data lo_api_controller     type ref to if_wd_controller.
      data lo_message_manager    type ref to if_wd_message_manager.
      data: itab TYPE WDR_NAME_VALUE_LIST,
            wa TYPE WDR_NAME_VALUE.

      wa-name = 'connid'.
      wa-value = ls_connection-connid.
      APPEND wa TO itab.
      wa-name = 'carrid'.
      wa-value = ls_connection-carrid.
      APPEND wa TO itab.

      lo_api_controller ?= wd_This->Wd_Get_Api( ).

      CALL METHOD lo_api_controller->GET_MESSAGE_MANAGER
        RECEIVING
          MESSAGE_MANAGER = lo_message_manager
          .
*       report message
      CALL METHOD lo_message_manager->REPORT_ELEMENT_ERROR_MESSAGE
        EXPORTING
          MESSAGE_TEXT              = 'Keine Flüge zu &connid von &carrid'
          ELEMENT                   = lo_el_connection
*          ATTRIBUTES                =
          PARAMS                    = itab.
*          MSG_USER_DATA             =
*          IS_PERMANENT              = ABAP_FALSE
*          SCOPE_PERMANENT_MSG       = CO_MSG_SCOPE_CTXT_ELEMENT
*          MSG_INDEX                 =
*          CANCEL_NAVIGATION         =
*          IS_VALIDATION_INDEPENDENT = ABAP_FALSE
*          ENABLE_MESSAGE_NAVIGATION =
*          VIEW                      =
*          COMPONENT                 =
*        RECEIVING
*          MESSAGE_ID                =
          .

    ENDIF.


endmethod.
