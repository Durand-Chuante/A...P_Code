method READ_PRUEFUNG .
    DATA lo_nd_pruefungsergebnis TYPE REF TO if_wd_context_node.

    DATA lo_el_pruefungsergebnis TYPE REF TO if_wd_context_element.
    DATA ls_pruefungsergebnis TYPE wd_this->Element_pruefungsergebnis.

    DATA node_pruefungsergebnis TYPE REF TO if_wd_context_node.
    node_pruefungsergebnis = wd_context->get_child_node( name = 'PRUEFUNGSERGEBNIS' ).

*   navigate from <CONTEXT> to <PRUEFUNGSERGEBNIS> via lead selection
    lo_nd_pruefungsergebnis = wd_context->get_child_node( name = wd_this->wdctx_pruefungsergebnis ).

*   @TODO handle non existant child
*   IF lo_nd_pruefungsergebnis IS INITIAL.
*   ENDIF.

*   get element via lead selection
    lo_el_pruefungsergebnis = lo_nd_pruefungsergebnis->get_element( ).
*   @TODO handle not set lead selection
    IF lo_el_pruefungsergebnis IS INITIAL.
    ENDIF.

*   get all declared attributes
    lo_el_pruefungsergebnis->get_static_attributes(
      IMPORTING
        static_attributes = ls_pruefungsergebnis ).
    data itab TYPE if_componentcontroller=>elements_pruefungsergebnis.

          SELECT * from ZZ3325_PRUEFUNG
               INTO CORRESPONDING FIELDS OF TABLE
               itab WHERE pruefungsid = ls_pruefungsergebnis-pruefungsid.

  call METHOD node_pruefungsergebnis->bind_table
    EXPORTING
      new_items = itab.
endmethod.
